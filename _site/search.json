[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "In this hands on exercise, we will go through the ggplot packages of R and apply the the principle of Layered Grammar of Graphic."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#install-and-import-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#install-and-import-r-packages",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Install and Import R packages",
    "text": "Install and Import R packages\nThe code chunk below use the p_load function of pacman packages to check if tidyverse packages is installed in the computer. If they are, then they will be imported to R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#importing-data",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Importing Data",
    "text": "Importing Data\n\nexam_data &lt;- read_csv('data/Exam_data.csv')\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#r-graphic-vs-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#r-graphic-vs-ggplot",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "R Graphic vs ggplot",
    "text": "R Graphic vs ggplot\n\nR Graphicggplot\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\nfrom the comparison above can be seen that even though R Graphic codes are simpler, the ggplot has more room for flexibility.\nAlso, Pointed out by Hadley Wickham\n“The transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive.”"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_bar",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_bar",
    "text": "Geometric Objects: geom_bar\ngeom_bar utilised to plot bar chart\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_dotplot",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_dotplot",
    "text": "Geometric Objects: geom_dotplot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\ndotplot is used to plot dots. Each dot represent a single observation. However, the y-axis is showing something else which is wrong. Therefore, we can turned off or remove the y-axis using the scale_y_continuous.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_histogram",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_histogram()",
    "text": "Geometric Objects: geom_histogram()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\ngeom histogram is to plot histogram with default bin of 30"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Modifying a geometric object by changing geom()",
    "text": "Modifying a geometric object by changing geom()\nchange the bin number to 20, with black outline and light blue filling\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,\n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Modifying a geometric object by changing aes()",
    "text": "Modifying a geometric object by changing aes()\nusing fill of aes to indicate subgroup\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom-density",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom-density",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom-density()",
    "text": "Geometric Objects: geom-density()\nplot the kernel density plot, smoothed histogram\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nseparate the gender group using colour aes\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_boxplot",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_boxplot",
    "text": "Geometric Objects: geom_boxplot\ncreating box plot to show the median, two hinges and two whiskers, and all “outlying” points individually.\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_violin",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_violin",
    "text": "Geometric Objects: geom_violin\nviolin is to visualised if two different plot or data has similar distribution\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geometric-objects-geom_point",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Geometric Objects: geom_point()",
    "text": "Geometric Objects: geom_point()\ngeom_point used to show the scatterplot. In below example, its a scatterplot between Math and English subject.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geom-objects-can-be-combined",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#geom-objects-can-be-combined",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "geom objects can be combined",
    "text": "geom objects can be combined\nmultiple geoms can be drawn into the same graphic\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-stat",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat()",
    "text": "Working with stat()\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\nthe bar above can be added with some more stats such as mean"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the stat_summary() method",
    "text": "Working with stat - the stat_summary() method\nadding mean point to the box plot, stat_summary method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)               \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-stat---the-geom-method",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the geom() method",
    "text": "Working with stat - the geom() method\nadding mean point to the box plot, geom method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)          \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Adding a best fit curve on a scatterplot?",
    "text": "Adding a best fit curve on a scatterplot?\ngeom_smooth used to add fit line to the scatter plot\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nthe default method of geom smooth is loess, below is how to set to other method of fit line\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-facet_wrap",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with facet_wrap()",
    "text": "Working with facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#facet_grid-function",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "facet_grid() function",
    "text": "facet_grid() function\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-coordinate",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with Coordinate",
    "text": "Working with Coordinate\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\nthe default bar chart is vertical, we could change it to horizontal using the code below.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#changing-the-y--and-x-axis-range",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Changing the y- and x-axis range",
    "text": "Changing the y- and x-axis range\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nwe can fixed and set the x and y axis to give better view and reduce misinterpretation\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex1/Hands-on_Ex1.html#working-with-theme",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with theme",
    "text": "Working with theme\nwe can choose theme to fit our needs.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "In this hands on exercise, several ggplot2 extensions will be tried to create more elegant and effective graphics.\n\ncontrol the placement of texts on graph utilising ggrepel package\ncreate professional publication quality figure utilising ggthemes and hrbrthemes package\nplot composite figure utilising ggplot2 and patchwork package"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#overview",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "In this hands on exercise, several ggplot2 extensions will be tried to create more elegant and effective graphics.\n\ncontrol the placement of texts on graph utilising ggrepel package\ncreate professional publication quality figure utilising ggthemes and hrbrthemes package\nplot composite figure utilising ggplot2 and patchwork package"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#getting-started",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Getting started",
    "text": "Getting started\n\nImporting the required libraries\nthere are 4 new libraries that are going to be utilised in this hands on. They are:\n\nggrepel: to repel overlapping text\nggthemes: to provide wider themes, geoms, and scales for ggplot2\nhrbrthemes: to provide typography-centric themes and theme componens for ggplot2\npatchwork: to combine figures\n\n\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)\n\n\n\nImporting the data\nthe data that will be used in this hands-on is exam data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\npreview 5 row of the exam data\n\nhead(exam_data,5)\n\n# A tibble: 5 × 7\n  ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n  &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 Student321 3I    Male   Malay        21     9      15\n2 Student305 3I    Female Malay        24    22      16\n3 Student289 3H    Male   Chinese      26    16      16\n4 Student227 3F    Male   Chinese      27    77      31\n5 Student318 3I    Male   Malay        27    11      25"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Beyond ggplot2 annotation: ggrepel",
    "text": "Beyond ggplot2 annotation: ggrepel\nFirst, we look on the plot without using the ggrepel\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n                 y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              size = 0.5) +\n  geom_label(aes(label=ID),\n             hjust = .5,\n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores\")\n\n\n\n\nThere are too much annotation that you cannot see anything anymore\n\nworking with ggrepel\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              size = 0.5) +\n  geom_label_repel(aes(label = ID),\n                   fontface = \"bold\") +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  ggtitle(\"English scores versus Math schores for Primary 3\")\n\n\n\n\nnow the annotation are not overlapping and only shown when possible"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyond-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyond-ggplot2-themes",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Beyond ggplot2 themes",
    "text": "Beyond ggplot2 themes\nthere are some built in themes from ggplot such as theme_gray(), theme_bw(), theme_minimal() and some more.\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = \"grey25\",\n                 fill = \"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Math scores\")\n\n\n\n\n\nggtheme\nggtheme is part of ggplot. However, it is open for extension therefore there are more ggplot that created by communities, theme_economist() is one of the example of theme created by others\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = 'grey25',\n                 fill = 'grey90') +\n  ggtitle('Distribution of Math scores') +\n  theme_economist()\n\n\n\n\n\n\nhrbrthemes\nhrbrthemes are more focused on the typography instead of the overall beauty\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = 'grey25',\n                 fill = 'grey90') +\n  ggtitle('Distribution of Math scores') +\n  theme_ipsum()\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = 'grey25',\n                 fill = 'grey90') +\n  ggtitle('Distribution of Math scores') +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyond-single-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#beyond-single-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Beyond Single Graphs",
    "text": "Beyond Single Graphs\nsometimes plotting a single graph give minimum information. therefore, it is common to plot more than 1 graphic at the same time. this is to increase the amount of information and understanding extracted from the plots.\n\np1 &lt;- ggplot(data = exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins = 20, \n                 boundary = 100,\n                 color = \"grey25\", \n                 fill = \"grey90\") + \n  coord_cartesian(xlim = c(0,100)) +\n  ggtitle(\"Distribution of Math scores\")\n\np1\n\n\n\n\n\np2 &lt;- ggplot(data = exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins = 20, \n                 boundary = 100,\n                 color = \"grey25\", \n                 fill = \"grey90\") +\n  coord_cartesian(xlim = c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np2\n\n\n\n\n\np3 &lt;- ggplot(data = exam_data, \n             aes(x = MATHS,\n                 y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              size = 0.5) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  ggtitle(\"English scores versus Math scores for Primary 3\")\n\np3\n\n\n\n\nhere are 3 graphs plotted one after another. this way of plotting makes it hard to compare between them\n\nCreating Composite Graphics: patchwork methods\npatchwork is an extension of ggplot2\n\n+ or | is used to create new column layout\n() is used for subplots\n/ is used for new row layout\n\n\n\n2 Plots\n\ncolumnrow\n\n\n\np1 + p2\n\n\n\n\n\n\n\np1 / p2\n\n\n\n\n\n\n\n\n\n3 Plots\n\ncolumnrowcombination\n\n\n\np1 + p2 + p3\n\n\n\n\n\n\n\np1 / p2 / p3\n\n\n\n\n\n\nuse “|” instead of “+” to use combination\n\n(p1/p2)|(p3)\n\n\n\n\n\n\n\n\n\nannotation(tag)\n\n((p1/p2)|p3) +\n  plot_annotation(tag_levels='I')\n\n\n\n\n\n\nplot inside of plot\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\npatchwork + ggthemes\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex2/Hands-on_Ex2.html#reference",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "Reference",
    "text": "Reference\n\nPatchwork R package goes nerd viral\nggrepel\nggthemes\nhrbrthemes\nggplot tips: Arranging plots\nggplot2 Theme Elements Demonstration\nggplot2 Theme Elements Reference Sheet"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "in this hands on exercise, I will explore the functions of ggiraph and plotlyr packages"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#prologue",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#prologue",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "in this hands on exercise, I will explore the functions of ggiraph and plotlyr packages"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#getting-started",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Getting started",
    "text": "Getting started\nwe are going to utilise several packages in this hands on exercise, they are:\n\nggiraph: to create intractivity in ggplot graphics\nplotly: to plot interactive graphs\nDT: to create interactive table for HTML pages (interface to the java script DataTables library)\ntidyverse: R packages to support data science, analysis, and creating statistical graphs\npatchwork: to combine multiple graphs into single figures\n\n\npacman::p_load(ggiraph, plotly, patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#importing-data",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Importing data",
    "text": "Importing data\nfor this hands on exercise, we are going to import Exam_data.csv using the read_csv() from readr packages.\n\nexam_data &lt;- read_csv('data/Exam_data.csv')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Interactive data visualisation - ggiraph methods",
    "text": "Interactive data visualisation - ggiraph methods\nggiraph is an extension of ggplot2 to create interactive ggplot graphics.\nthere are 3 arguments to be used from ggiraph toward ggplot geometries, they are:\n\nTooltip: is to display data when mouse is hovering the elements\nOnclick: give action when the element is clicked\nData_id: containing the id to be associated with the elements\n\n\nTooltip 1\nthe example below consists of 2 part. the first part is where the graph is created and the next one girafe() is to create an interactive svg object. the plot below will show the information of the element when mouse hover on it.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\nTooltip 2\nthe codechunk below preview on how to create tooltips with multiple information on the elements\n\nexam_data$tooltip &lt;- c(paste0(\n  \"Name = \", exam_data$ID,\n  \"\\n Class = \", exam_data$CLASS\n))\n\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\"\n  ) +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\nCustomising tooltip\n\ntooltip_css &lt;- \"background-color:white;\n                font-style:bold;\n                color:black;\"\n\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = 'histodot'\n  ) +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(\n      css = tooltip_css\n    )\n  )\n)\n\n\n\n\n\n\n\nStatistic tooltip\nbelow is way to create interactive graph with statistical tooltip to the elements. we are going to plot the average of math score of each race with 90% confidence interval\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data = exam_data,\n                   aes(x=RACE)) +\n  stat_summary(aes(y = MATHS,\n                   tooltip = after_stat(\n                     tooltip(y, ymax)\n                   )),\n               fun.data = \"mean_se\",\n               geom = GeomInteractiveCol,\n               fill = \"light blue\") +\n  stat_summary(aes(y = MATHS),\n               fun.data = mean_se,\n               geom = 'errorbar',\n               width = 0.2,\n               size = 0.2) \n\ngirafe(\n  ggobj = gg_point,\n  width_svg = 8,\n  height_svg =  8*0.618\n)\n\n\n\n\n\n\n\nHover effect\nhere we are going to try highlighting effect on hover. we are going to fill the same class and inverse (greyed) the rest\n\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(data_id = CLASS),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = 'histodot'\n  ) + \n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(\n    opts_hover(css = \"fill: #000000;\"),\n    opts_hover_inv(css = \"opacity:0.2;\")\n  )\n)\n\n\n\n\n\n\n\nTooltip and hover\nwe are going to combine the tooltip element and the hover effect together. greyed out the one thats not in the same class and label the dots with the class it belongs to\n\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(data_id = CLASS,\n        tooltip = CLASS),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = 'histodot'\n  ) + \n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(\n    opts_hover(css = \"fill: #000000;\"),\n    opts_hover_inv(css = \"opacity:0.2;\")\n  )\n)\n\n\n\n\n\n\n\nOnclick\nhere is the example of on click. we are going to open a new tab of of moe website when one of the dots are clicked.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n                             \"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\", as.character(exam_data$ID))\n\nexam_data$tooltip &lt;- c(\n  \"We are going somewhere interesting :)\"\n)\n\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(onclick = onclick,\n        tooltip = tooltip),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\"\n  ) +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\ngirafe(\n  ggobj = p ,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\nConnected Multiple view with ggiraph\nwe will combine the usage of ggiraph and patchwork to create coordinated multple views of interactive graphs. the graph will highlight the same student at the other graph when the mouse is hovered at one of the graph\n\np1 &lt;- ggplot(data = exam_data,\n             aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = 'histodot'\n  ) +\n  coord_cartesian(xlim = c(0,100)) +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\np2 &lt;- ggplot(data = exam_data,\n             aes(x = ENGLISH)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = 'histodot'\n  ) +\n  coord_cartesian(xlim = c(0,100)) +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\ngirafe(\n  code = print(p1 + p2),\n  width_svg = 6,\n  height_svg = 3,\n  options = list(\n    opts_hover(css = \"fill: #000000;\"),\n    opts_hover_inv(css = \"opacity:0.2;\")\n  )\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#interactive-data-visualisation---plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Interactive data visualisation - plotly methods",
    "text": "Interactive data visualisation - plotly methods\nthe other way to create interactive map is to use plotly. this package work by using the plotly.js interface of javascript library.\nthere is two way to use plotly in r, they are:\n\nplot_ly()\nggplotly()\n\n\nplot_ly() graph\na simple plotly plot where you could get x and y coordinate of the dot when hovered\n\nplot_ly(data = exam_data,\n        x = ~MATHS,\n        y = ~ENGLISH)\n\n\n\n\n\n\n\nplot_ly(): visual variable\nthe same plot as before with additional visual color\n\nplot_ly(data = exam_data,\n        x = ~MATHS,\n        y = ~ENGLISH,\n        color = ~RACE)\n\n\n\n\n\n\n\nggplotly() method\ncreating the ggplot as usual then make it interactive using ggplotly\n\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\nggplotly(p)\n\n\n\n\n\n\n\ncoordinated multiple view with plotly()\n\nhighlight_key(): shared data\nsubplot(): to plot multiple graph side by side\nclick on one of the dot to trigger the interactivity\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d,\n             aes(x = MATHS,\n                 y = ENGLISH)) + \n  geom_point(size = 1) + \n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) \n\np2 &lt;- ggplot(data=d,\n             aes(x = MATHS,\n                 y = SCIENCE)) + \n  geom_point(size = 1) + \n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) \n\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Interactive data visualisation - crosstalk methods",
    "text": "Interactive data visualisation - crosstalk methods\ncrosstalk is an add-on to the htmlwidgets package.\n\nDT package\n\na wrapper or interface toward DataTables library of javascript\ndata objects in R can be rendered as HTML tables using the library\n\n\nDT::datatable(exam_data, class = \"compact\")\n\n\n\n\n\n\n\n\nLinked brushing: crosstalk method\n\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!.\n\n\nd &lt;- highlight_key(exam_data)\np &lt;- ggplot(data=d,\n             aes(x = MATHS,\n                 y = ENGLISH)) + \n  geom_point(size = 1) + \n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) \ngg &lt;- highlight(ggplotly(p),\n                \"plotly_selected\")\n\ncrosstalk::bscols(gg,\n                  DT::datatable(d),\n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3a.html#reference",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "Reference",
    "text": "Reference\n\nggiraph\nThis link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\n\nHow to Plot With Ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists.\n\n\n\nplotly for R\n\nGetting Started with Plotly in R\nA collection of plotly R graphs are available via this link.\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html",
    "title": "Hands-on_Exercise 3b: Programming Animated Statistical Graphic with R",
    "section": "",
    "text": "in this hands on exercise we are going to create an animated graphic. we will utilise gganimate and plotly of r packages.\nwhen creating animations, the plot were not moving, instead there are multiple plot that are appear on each frames. resulting in animation\n\nBefore we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html#prologue",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html#prologue",
    "title": "Hands-on_Exercise 3b: Programming Animated Statistical Graphic with R",
    "section": "",
    "text": "in this hands on exercise we are going to create an animated graphic. we will utilise gganimate and plotly of r packages.\nwhen creating animations, the plot were not moving, instead there are multiple plot that are appear on each frames. resulting in animation\n\nBefore we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html#getting-started",
    "title": "Hands-on_Exercise 3b: Programming Animated Statistical Graphic with R",
    "section": "Getting started",
    "text": "Getting started\n\nLoading packages\nthere are 5 packages that will be used in this hands on, they are:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder, plotly, gganimate, tidyverse)\n\n\n\nImporting data\nwe are going to use the Data worksheet from the GlobalPopulation excel workbook.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\nhow ever mutate_each_() is deprecated previously, instead we can use mutate_at()\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\nthe alternate of mutate_at(), is across()\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html#animated-data-visualisation-gganimate-methods",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on_Exercise 3b: Programming Animated Statistical Graphic with R",
    "section": "Animated data visualisation: gganimate methods",
    "text": "Animated data visualisation: gganimate methods\ngganimate extends the grammar of graphics as implemented by ggplot2 to include the description of animation. It does this by providing a range of new grammar classes that can be added to the plot object in order to customise how it should change with time.\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time.\nview_*() defines how the positional scales should change along the animation.\nshadow_*() defines how data from other points in time should be presented in the given point in time.\nenter_*()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\nBuilding a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\nBuilding the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html#animated-data-visualisation-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html#animated-data-visualisation-plotly",
    "title": "Hands-on_Exercise 3b: Programming Animated Statistical Graphic with R",
    "section": "Animated data visualisation: plotly",
    "text": "Animated data visualisation: plotly\nIn Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an idsargument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n\nBuilding an animated bubble plot: ggplotly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using ggplotly() method.\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\nBuilding an animated bubble plot: plot_ly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using plot_ly() method.\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex3/Hands-on_Ex3b.html#reference",
    "title": "Hands-on_Exercise 3b: Programming Animated Statistical Graphic with R",
    "section": "Reference",
    "text": "Reference\n\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608: Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to my ISSS608 Visual Analytics and Applications journey. Follow me through the course!\nnavigate through the navbar on top!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html",
    "title": "DataViz Makeover",
    "section": "",
    "text": "in this take home exercise, I will make over take-home exercise 1 of my classmate. I will try to improve his figures."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#overview",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#overview",
    "title": "DataViz Makeover",
    "section": "",
    "text": "in this take home exercise, I will make over take-home exercise 1 of my classmate. I will try to improve his figures."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#getting-started",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#getting-started",
    "title": "DataViz Makeover",
    "section": "Getting started",
    "text": "Getting started\n\nLoading packages\nwe are going to use several packages beforehand.\n\npacman::p_load(tidyverse, haven, patchwork)\n\n\n\nImporting dataset\nwe are going to use the same dataset of student questionnaire, we are going to follow the steps;\n\nImporting the data in sas data type\n\n\nstu_qqq &lt;- read_sas('data/cy08msp_stu_qqq.sas7bdat')\n\n\nFiltering the data to singapore\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nExport the filtered dataset to rds to ease further data importing\n\n\nwrite_rds(stu_qqq_SG, 'data/stu_qqq_SG.rds')\n\n\nRead the exported rds\n\n\nstu_qqq_SG &lt;- read_rds('data/stu_qqq_SG.rds')\n\n\n\nData preparation and wrangling\n\nData preparation\n\nFiltering the columns that will be used for further analysis, in this analysis we are going to take 6 variables, they are:\n\nCNTSCHID = school_id\nST004D01T = gender\nmath = average of 10 math possible values\nscience = average of 10 science possible values\nread = average of 10 reading possible values\nESCS = social economic\n\nRename the columns to a more understandable names\nRecode the answers of questions to a more descriptive measures\nChange the columns data type\n\n\nstu_qqq &lt;- stu_qqq_SG %&gt;%\n  mutate(math = rowMeans(select(stu_qqq_SG,\n         PV1MATH,PV2MATH,PV3MATH,PV4MATH,PV5MATH,PV6MATH,PV7MATH,PV8MATH,PV9MATH,PV10MATH)),\n         science = rowMeans(select(stu_qqq_SG,\n         PV1SCIE,PV2SCIE,PV3SCIE,PV4SCIE,PV5SCIE,PV6SCIE,PV7SCIE,PV8SCIE,PV9SCIE,PV10SCIE)),\n         read = rowMeans(select(stu_qqq_SG,\n         PV1READ,PV2READ,PV3READ,PV4READ,PV5READ,PV6READ,PV7READ,PV8READ,PV9READ,PV10READ))\n         ) %&gt;%\n  select(CNTSCHID,ST004D01T,math,science,read,ESCS) %&gt;%\n  rename(c(school_ID = \"CNTSCHID\", \n           gender = \"ST004D01T\",\n           socio_economic = \"ESCS\")) %&gt;%\n  mutate(gender = recode(gender, \n                         \"1\" = \"Female\", \n                         \"2\" = \"Male\"))\n\nstu_qqq_sch &lt;- stu_qqq %&gt;%\n  group_by(school_ID) %&gt;%\n  summarise(\n    average_math = mean(math),\n    average_read = mean(read),\n    average_scie = mean(science)) %&gt;%\n  unique()\n\nstu_qqq$school_ID &lt;- as.factor(stu_qqq$school_ID)\nstu_qqq$gender &lt;- as.factor(stu_qqq$gender)\n\n\nglimpse(stu_qqq)\n\nRows: 6,606\nColumns: 6\n$ school_ID      &lt;fct&gt; 70200052, 70200134, 70200112, 70200004, 70200152, 70200…\n$ gender         &lt;fct&gt; Female, Male, Male, Male, Female, Female, Male, Male, F…\n$ math           &lt;dbl&gt; 605.2533, 689.9528, 676.7768, 401.0528, 436.1151, 518.1…\n$ science        &lt;dbl&gt; 639.7873, 672.0703, 660.0384, 343.6425, 479.2390, 476.0…\n$ read           &lt;dbl&gt; 667.4296, 627.6078, 582.9252, 361.3969, 475.6763, 431.4…\n$ socio_economic &lt;dbl&gt; 0.1836, 0.8261, -1.0357, -0.9606, 0.0856, 0.1268, -0.01…"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#visualisation-makeover",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#visualisation-makeover",
    "title": "DataViz Makeover",
    "section": "Visualisation Makeover",
    "text": "Visualisation Makeover\n\n1. Distribution of student’s performance in each subject\n\nthe goal of the above plot is to show the median, mean, and distribution of the student performances across the subjects.\nI believe the plot above can be improved, such as:\n\nthe x axis could be more clearer, instead of putting the subject as a title, the subject can be put before the “score” at x axis (Clarity)\nthe mean line color is very similar as the bar color resulting in blended colour between both, therefore the color could be changed (Aesthetic)\nwe cannot really know the score for the median and mean, adding the score to the label using annotation could give additional information (Clarity)\nthe minimal space of using patchwork got worse since histogram is used, the figure above gives false impression of reading to be more important with a bigger graph than science and math. this might be caused by having 3 vertical histogram side by side would make each graphs too squeezed. I propose to change the orientation of the graph and make them side by side to reduce the inclarity of the graph. (Aesthetic)\n\nSketches :\n\n\nsummary(stu_qqq$math)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  262.6   506.3   582.4   574.0   648.4   842.7 \n\nsummary(stu_qqq$science)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  242.0   498.9   571.2   561.0   629.3   801.9 \n\nsummary(stu_qqq$read)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  158.6   477.4   553.6   542.5   616.1   797.6 \n\n\n\nstat1_mean &lt;- mean(stu_qqq$math)\nstat1_median &lt;- median(stu_qqq$math)\n\nstat2_mean &lt;- mean(stu_qqq$science)\nstat2_median &lt;- median(stu_qqq$science)\n\nstat3_mean &lt;- mean(stu_qqq$read)\nstat3_median &lt;- median(stu_qqq$read)\n\np1 &lt;- ggplot(data = stu_qqq,\n       aes(x = math)) +\n  geom_histogram(binwidth = 50,\n                 color = 'grey75',\n                 fill = 'grey90') +\n  stat_bin(binwidth = 50,\n           geom = \"text\",\n           aes(label=after_stat(count)), \n           vjust = .35,\n           hjust = .75,\n           size = 2.5,\n           color = 'black') +\n  geom_vline(mapping = aes(xintercept=stat1_mean),\n             color = \"red\",\n             linetype = 'dashed') +\n  geom_vline(mapping = aes(xintercept=stat1_median),\n             color = \"blue\",\n             linetype = 'dashed') +\n  annotate(\n    'text',\n    x = stat1_mean - 20,\n    y = 500,\n    label = paste0(\"Mean = \", round(stat1_mean,2)),\n    color = \"red\"\n  ) +\n  annotate(\n    'text',\n    x = stat1_median + 20,\n    y = 550,\n    label = paste0(\"Median = \", round(stat1_median,2)),\n    color = \"blue\"\n  ) +\n  scale_x_continuous(\"Math Scores\", limits = c(150,850), breaks = seq(150,850,50)) +\n  scale_y_continuous(\"Frequency\", breaks = seq(0,1300,200)) +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank()) +\n  coord_flip() \n\np2 &lt;- ggplot(data = stu_qqq,\n       aes(x = science)) +\n  geom_histogram(binwidth = 50,\n                 color = 'grey75',\n                 fill = 'grey90') +\n  stat_bin(binwidth = 50,\n           geom = \"text\",\n           aes(label=after_stat(count)), \n           vjust = .35,\n           hjust = .75,\n           size = 2.5,\n           color = 'black') +\n  geom_vline(mapping = aes(xintercept=stat2_mean),\n             color = \"red\",\n             linetype = 'dashed') +\n  geom_vline(mapping = aes(xintercept=stat2_median),\n             color = \"blue\",\n             linetype = 'dashed') +\n  annotate(\n    'text',\n    x = stat2_mean - 20,\n    y = 500,\n    label = paste0(\"Mean = \", round(stat2_mean,2)),\n    color = \"red\"\n  ) +\n  annotate(\n    'text',\n    x = stat2_median + 20,\n    y = 550,\n    label = paste0(\"Median = \", round(stat2_median,2)),\n    color = \"blue\"\n  ) +\n  scale_x_continuous(\"Science Scores\", limits = c(150,850), breaks = seq(150,850,50)) +\n  scale_y_continuous(\"Frequency\", breaks = seq(0,1300,200)) +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank()) +\n  coord_flip() \n\np3 &lt;- ggplot(data = stu_qqq,\n       aes(x = read)) +\n  geom_histogram(binwidth = 50,\n                 color = 'grey75',\n                 fill = 'grey90') +\n  stat_bin(binwidth = 50,\n           geom = \"text\",\n           aes(label=after_stat(count)), \n           vjust = .35,\n           hjust = .75,\n           size = 2.5,\n           color = 'black') +\n  geom_vline(mapping = aes(xintercept=stat3_mean),\n             color = \"red\",\n             linetype = 'dashed') +\n  geom_vline(mapping = aes(xintercept=stat3_median),\n             color = \"blue\",\n             linetype = 'dashed') +\n  annotate(\n    'text',\n    x = stat3_mean - 20,\n    y = 500,\n    label = paste0(\"Mean = \", round(stat3_mean,2)),\n    color = \"red\"\n  ) +\n  annotate(\n    'text',\n    x = stat3_median + 20,\n    y = 550,\n    label = paste0(\"Median = \", round(stat3_median,2)),\n    color = \"blue\"\n  ) +\n  scale_x_continuous(\"Reading Scores\", limits = c(150,850), breaks = seq(150,850,50)) +\n  scale_y_continuous(\"Frequency\", breaks = seq(0,1300,200)) +\n  theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank()) +\n  coord_flip() \n\np1 + p2 + p3 + plot_annotation(\n  title = 'Student\\'s Performance across Subjects ',\n  theme = theme(plot.title = element_text(hjust = 0.5))\n)\n\n\n\n\n\n\n2. Student’s academic performances in relation to gender\n\nthe plot above was used to show the student performance differences between gender across the subject\nthere are ways to improve the plot, such as:\n\ngive different colors toward each subject (Aesthetic)\na clearer and more attractive title (Clarity)\ngiving the error bar on the box plot to give better view (Aesthetic)\ncreate more y tick to ease reading each of the box plot attributes (Clarity)\n\nSketches :\n\n\n\ngendermath &lt;- ggplot(data = stu_qqq,\n       aes(x = gender,\n           y = math)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.25,\n               color = c(\"red\",'blue'))+\n  geom_boxplot(color = c(\"red\",'blue'), fill = c(\"pink\",'lightblue')) +\n  geom_point(stat = \"summary\",        \n             fun.y = \"mean\",           \n             colour = \"darkgreen\",          \n             size = 1) +\n  labs(x = \"Math's Score\") +\n  scale_y_continuous(\"Score\", breaks = seq(150,850,50), limits = c(150,850))+\n    theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n          panel.grid.major = element_line(color = \"grey80\"),\n          panel.grid.minor = element_blank(),\n          panel.grid.major.x = element_blank())\n\ngenderread &lt;- ggplot(data = stu_qqq,\n       aes(x = gender,\n           y = read)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.25,\n               color = c(\"red\",'blue'))+\n  geom_boxplot(color = c(\"red\",'blue'), fill = c(\"pink\",'lightblue')) +\n  geom_point(stat = \"summary\",        \n             fun.y = \"mean\",           \n             colour = \"darkgreen\",          \n             size = 1) +\n  ylim(150,850) +\n  labs(x = \"Reading's Score\") +\n  scale_y_continuous(NULL,breaks = seq(150,850,50), limits = c(150,850))+\n    theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n          panel.grid.major = element_line(color = \"grey80\"),\n          panel.grid.minor = element_blank(),\n          panel.grid.major.x = element_blank())\n\ngendersci &lt;- ggplot(data = stu_qqq,\n       aes(x = gender,\n           y = science)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.25,\n               color = c(\"red\",'blue'))+\n  geom_boxplot(color = c(\"red\",'blue'), fill = c(\"pink\",'lightblue')) +\n  geom_point(stat = \"summary\",        \n             fun.y = \"mean\",           \n             colour = \"darkgreen\",          \n             size = 1) +\n  ylim(150,850) +\n  labs(x = \"Science's Score\") +\n  scale_y_continuous(NULL,breaks = seq(150,850,50), limits = c(150,850))+\n    theme(panel.background = element_rect(fill=\"white\",colour=\"white\"),\n          panel.grid.major = element_line(color = \"grey80\"),\n          panel.grid.minor = element_blank(),\n          panel.grid.major.x = element_blank())\n\ngendermath + genderread + gendersci + plot_annotation(\n  title = 'Student\\'s Performance across Subjects between Genders',\n  theme = theme(plot.title = element_text(hjust = 0.5))\n)\n\n\n\n\n\n\n\n3. The comparison of student’s performances between schools\n\nthe plot above was used to show the average student performance of a school\nthere are ways to improve the plot, such as:\n\nClearer title and axis labels (Clarity)\nMore pronounced colour differences between the median line and the histogram (Aesthetic)\nCreate more tick to ease viewing and reduce the axis length (Clarity)\nBigger bin for each histogram to make it more tight (Aesthetic)\nannotate the median value (Clarity)\n\nSketches :\n\n\nsummary(stu_qqq_sch$average_math)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  386.7   530.8   563.7   569.7   591.6   739.8 \n\n\n\nschmath &lt;- ggplot(data = stu_qqq_sch,\n       aes(x = average_math)) +\n  geom_histogram(binwidth=50,\n                 color = \"grey50\",\n                 fill = \"lightblue\") +\n  scale_x_continuous(\"Avg Math Score\", limits = c(350,750), breaks = seq(375,725,50)) +\n  scale_y_continuous(\"No of School\", limits = c(0,70), breaks = seq(0,70,5)) +\n  geom_vline(\n    aes(xintercept = median(average_math)),\n    colour=\"red\", \n    linewidth = 0.8, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median(stu_qqq_sch$average_math) + 25, \n    y = 65,\n    label = paste0(\"Median = \\n\", round(median(stu_qqq_sch$average_math),2)),\n    color = \"red\",\n    hjust = 0\n  ) +\n  theme(axis.text.x = element_text(size=5),\n        panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank())\n\nschscie &lt;- ggplot(data = stu_qqq_sch,\n       aes(x = average_scie)) +\n  geom_histogram(binwidth=50,\n                 color = \"grey50\",\n                 fill = \"lightblue\") +\n  scale_x_continuous(\"Avg Science Score\", limits = c(350,750), breaks = seq(375,725,50)) +\n  scale_y_continuous(NULL, limits = c(0,70), breaks = seq(0,70,5)) +\n  geom_vline(\n    aes(xintercept = median(average_scie)),\n    colour=\"red\", \n    linewidth = 0.8, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median(stu_qqq_sch$average_scie) + 25, \n    y = 65,\n    label = paste0(\"Median = \\n\", round(median(stu_qqq_sch$average_read),2)),\n    color = \"red\",\n    hjust = 0\n  ) +\n  theme(axis.text.x = element_text(size=5),\n        panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank())\n\nschread &lt;- ggplot(data = stu_qqq_sch,\n       aes(x = average_read)) +\n  geom_histogram(binwidth=50,\n                 color = \"grey50\",\n                 fill = \"lightblue\") +\n  scale_x_continuous(\"Avg Reading Score\", limits = c(350,750), breaks = seq(375,725,50)) +\n  scale_y_continuous(NULL, limits = c(0,70), breaks = seq(0,70,5)) +\n  geom_vline(\n    aes(xintercept = median(average_read)),\n    colour=\"red\", \n    linewidth = 0.8, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = median(stu_qqq_sch$average_read) + 25, \n    y = 65,\n    label = paste0(\"Median = \\n\", round(median(stu_qqq_sch$average_read),2)),\n    color = \"red\",\n    hjust = 0\n  ) +\n  theme(axis.text.x = element_text(size=5),\n        panel.background = element_rect(fill=\"white\",colour=\"white\"),\n        panel.grid.major = element_line(color = \"grey80\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.x = element_blank())\n\nschmath + schscie + schread + plot_annotation(\n  title = 'Average student\\'s Performance across Schools',\n  theme = theme(plot.title = element_text(hjust = 0.5))\n)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "In this Take home Exercise we are going to explore the data from PISA 2022 database released on 5 December 2022. The dataset is the result of questionnaire filled by the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#prologue",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#prologue",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "In this Take home Exercise we are going to explore the data from PISA 2022 database released on 5 December 2022. The dataset is the result of questionnaire filled by the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#getting-started",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#getting-started",
    "title": "Take-Home Exercise 1",
    "section": "Getting Started",
    "text": "Getting Started\n\nImporting packages\nIn this take home exercise we are going to utilise several package\n\nTidyverse (to wrangle and plot our data)\nHaven (to read our dataset from sas data type)\nPatchwork (to plot multiple plot in the same figure)\n\n\npacman::p_load(tidyverse, haven, patchwork)\n\n\n\nImporting dataset\nImporting the data in sas data type\n\nstu_qqq &lt;- read_sas('data/cy08msp_stu_qqq.sas7bdat')\n\nFiltering the data to singapore\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nExport the filtered dataset to rds to ease further data importing\n\nwrite_rds(stu_qqq_SG, 'data/stu_qqq_SG.rds')\n\nRead the exported rds\n\nstu_qqq_SG &lt;- read_rds('data/stu_qqq_SG.rds')"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#data-preparation",
    "title": "Take-Home Exercise 1",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nVariable preparations\n\nFiltering the columns that will be used for further analysis, in this analysis we are going to take 6 variables, they are:\n\nCNTSCHID = school_id\nST004D01T = gender\nmath = average of 10 math possible values\nscience = average of 10 science possible values\nread = average of 10 reading possible values\nESCS = social economic\n\nRename the columns to a more understandable names\nRecode the answers of questions to a more descriptive measures\nChange the columns data type\n\n\nstu_qqq &lt;- stu_qqq_SG %&gt;%\n  mutate(math = rowMeans(select(stu_qqq_SG,\n         PV1MATH,PV2MATH,PV3MATH,PV4MATH,PV5MATH,PV6MATH,PV7MATH,PV8MATH,PV9MATH,PV10MATH)),\n         science = rowMeans(select(stu_qqq_SG,\n         PV1SCIE,PV2SCIE,PV3SCIE,PV4SCIE,PV5SCIE,PV6SCIE,PV7SCIE,PV8SCIE,PV9SCIE,PV10SCIE)),\n         read = rowMeans(select(stu_qqq_SG,\n         PV1READ,PV2READ,PV3READ,PV4READ,PV5READ,PV6READ,PV7READ,PV8READ,PV9READ,PV10READ))\n         ) %&gt;%\n  select(CNTSCHID,ST004D01T,math,science,read,ESCS) %&gt;%\n  rename(c(school_ID = \"CNTSCHID\", \n           gender = \"ST004D01T\",\n           socio_economic = \"ESCS\")) %&gt;%\n  mutate(gender = recode(gender, \n                         \"1\" = \"Female\", \n                         \"2\" = \"Male\"))\n\nstu_qqq$school_ID &lt;- as.factor(stu_qqq$school_ID)\nstu_qqq$gender &lt;- as.factor(stu_qqq$gender)\n\n\n\nOverview\n\nglimpse(stu_qqq)\n\nRows: 6,606\nColumns: 6\n$ school_ID      &lt;fct&gt; 70200052, 70200134, 70200112, 70200004, 70200152, 70200…\n$ gender         &lt;fct&gt; Female, Male, Male, Male, Female, Female, Male, Male, F…\n$ math           &lt;dbl&gt; 605.2533, 689.9528, 676.7768, 401.0528, 436.1151, 518.1…\n$ science        &lt;dbl&gt; 639.7873, 672.0703, 660.0384, 343.6425, 479.2390, 476.0…\n$ read           &lt;dbl&gt; 667.4296, 627.6078, 582.9252, 361.3969, 475.6763, 431.4…\n$ socio_economic &lt;dbl&gt; 0.1836, 0.8261, -1.0357, -0.9606, 0.0856, 0.1268, -0.01…"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#exploratory-data-analysis-eda",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#exploratory-data-analysis-eda",
    "title": "Take-Home Exercise 1",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\nIn this section 4 analysis will be performed to get insights and uncover truth of factors for singapore student perfomances.\n\n1. Student Performances\nFrom the initial preview, we can see that there are no NA values for all the grades.\n\nstu_qqq_grade &lt;- stu_qqq %&gt;%\n  select (math, science, read)\n\ncolSums(is.na(stu_qqq_grade))\n\n   math science    read \n      0       0       0 \n\n\n\np1 &lt;- ggplot(data = stu_qqq_grade,\n       aes(y = math)) +\n  geom_violin(aes(x=0)) +\n  geom_boxplot()+\n  stat_boxplot(geom = \"errorbar\", width = 0.05) +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",         \n               colour = \"red\", \n               size = 1) +\n  scale_y_continuous(NULL, limits = c(0,1000)) +\n  scale_x_continuous(\"MATH GRADES\", breaks = NULL) +\n  theme_minimal()\np2 &lt;- ggplot(data = stu_qqq_grade,\n       aes(y = science)) +\n  geom_violin(aes(x=0)) +\n  geom_boxplot()+\n  stat_boxplot(geom = \"errorbar\", width = 0.05) +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",         \n               colour = \"red\", \n               size = 1) +\n  scale_y_continuous(NULL, limits = c(0,1000)) +\n  scale_x_continuous(\"SCIENCE GRADES\", breaks = NULL) +\n  theme_minimal()\np3 &lt;- ggplot(data = stu_qqq_grade,\n       aes(y = read)) +\n  geom_violin(aes(x=0)) +\n  geom_boxplot() +\n  stat_boxplot(geom = \"errorbar\", width = 0.05) +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",         \n               colour = \"red\", \n               size = 1) +\n  scale_y_continuous(NULL, limits = c(0,1000)) +\n  scale_x_continuous(\"READING GRADES\", breaks = NULL) +\n  theme_minimal()\n\np1|p2|p3\n\n\n\n\nFrom the figure above, the distribution of the performances are normal. However, there is a slight higher performance from one to another. (math &gt; science &gt; reading). Can also be seen that the variance for each performance is quite large. This could mean that student in Singapore does have large performance differences between one and another. This could be caused by multiple reasoning such as the school, gender, and social economic standing.\n\n\n2. Gender\nThe first factor that we are going to look into is gender.\n\nlength(stu_qqq$gender[is.na(stu_qqq$gender)])\n\n[1] 0\n\n\n\nggplot(data = stu_qqq,\n       aes(x = gender)) +\n  geom_bar(width = 0.5,\n           color = \"grey50\",\n           fill = \"grey90\")+\n  theme_minimal()\n\n\n\n\nFrom the distribution graph above can be seen that the questionnaire have similar number of male and female student.\n\nMathScienceReading\n\n\nFrom the graph below, can be seen that there are VERY SMALL differences between male and female science scores, with male have a SLIGHTLY HIGHER average and median score\n\n\nShow the code\nstats &lt;- data.frame(gender = as.factor(c('Female','Male')),\n                    mean = c(mean(stu_qqq$math[stu_qqq$gender == \"Female\"]),\n                             mean(stu_qqq$math[stu_qqq$gender == \"Male\"])),\n                    median = c(median(stu_qqq$math[stu_qqq$gender == \"Female\"]),\n                               median(stu_qqq$math[stu_qqq$gender == \"Male\"])) )\n\nggplot(data = stu_qqq,\n       aes(y = math)) +\n  geom_histogram(bins = 10,\n                 color = 'grey50',\n                 fill = 'grey90') +\n  facet_wrap(~ gender) +\n  geom_hline(data = stats,\n             mapping = aes(yintercept=mean),\n             color = \"red\") +\n  geom_hline(data = stats,\n             mapping = aes(yintercept=median),\n             color = \"blue\") +\n  annotate(\n    'text',\n    x = Inf,\n    y = Inf,\n    hjust = 1,\n    vjust = 2.1,\n    label = paste(\"MEAN\"),\n    color = \"red\"\n  ) +\n  annotate(\n    'text',\n    x = Inf,\n    y = Inf,\n    hjust = 1,\n    vjust = 1,\n    label = paste(\"MEDIAN\"),\n    color = \"blue\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\nFrom the graph below, can be seen that there are VERY SMALL differences between male and female science scores, with male have a SLIGHTLY HIGHER average and median score\n\n\nShow the code\nstats &lt;- data.frame(gender = as.factor(c('Female','Male')),\n                    mean = c(mean(stu_qqq$science[stu_qqq$gender == \"Female\"]),\n                             mean(stu_qqq$science[stu_qqq$gender == \"Male\"])),\n                    median = c(median(stu_qqq$science[stu_qqq$gender == \"Female\"]),\n                               median(stu_qqq$science[stu_qqq$gender == \"Male\"])) )\n\nggplot(data = stu_qqq,\n       aes(y = science)) +\n  geom_histogram(bins = 10,\n                 color = 'grey50',\n                 fill = 'grey90') +\n  facet_wrap(~ gender) +\n  geom_hline(data = stats,\n             mapping = aes(yintercept=mean),\n             color = \"red\") +\n  geom_hline(data = stats,\n             mapping = aes(yintercept=median),\n             color = \"blue\") +\n  annotate(\n    'text',\n    x = Inf,\n    y = Inf,\n    hjust = 1,\n    vjust = 2.1,\n    label = paste(\"MEAN\"),\n    color = \"red\"\n  ) +\n  annotate(\n    'text',\n    x = Inf,\n    y = Inf,\n    hjust = 1,\n    vjust = 1,\n    label = paste(\"MEDIAN\"),\n    color = \"blue\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\nFrom the graph below, can be seen that there are VERY SMALL differences between male and female reading scores, with male have a SLIGHTLY LOWER average and median score\n\n\nShow the code\nstats &lt;- data.frame(gender = as.factor(c('Female','Male')),\n                    mean = c(mean(stu_qqq$read[stu_qqq$gender == \"Female\"]),\n                             mean(stu_qqq$read[stu_qqq$gender == \"Male\"])),\n                    median = c(median(stu_qqq$read[stu_qqq$gender == \"Female\"]),\n                               median(stu_qqq$read[stu_qqq$gender == \"Male\"])) )\n\nggplot(data = stu_qqq,\n       aes(y = read)) +\n  geom_histogram(bins = 10,\n                 color = 'grey50',\n                 fill = 'grey90') +\n  facet_wrap(~ gender) +\n  geom_hline(data = stats,\n             mapping = aes(yintercept=mean),\n             color = \"red\") +\n  geom_hline(data = stats,\n             mapping = aes(yintercept=median),\n             color = \"blue\") +\n  annotate(\n    'text',\n    x = Inf,\n    y = Inf,\n    hjust = 1,\n    vjust = 2.1,\n    label = paste(\"MEAN\"),\n    color = \"red\"\n  ) +\n  annotate(\n    'text',\n    x = Inf,\n    y = Inf,\n    hjust = 1,\n    vjust = 1,\n    label = paste(\"MEDIAN\"),\n    color = \"blue\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nOverall, can be concluded that student’s performances are EQUAL no matter the gender is.\n\n\n3. School\n\nlength(stu_qqq$school_ID[is.na(stu_qqq$school_ID)])\n\n[1] 0\n\n\nThere are no NA cell on school ID.\n\nlength(unique(stu_qqq$school_ID))\n\n[1] 164\n\n\nThe student that was participating in this questionnaire was from 164 different school in Singapore\n\naverage_math_SG &lt;- mean(stu_qqq$math)\naverage_scie_SG &lt;- mean(stu_qqq$science)\naverage_read_SG &lt;- mean(stu_qqq$read)\n\nstu_qqq_sch &lt;- stu_qqq %&gt;%\n  group_by(school_ID) %&gt;%\n  mutate(average_math_diff = abs(mean(math)-average_math_SG),\n         average_science_diff = abs(mean(science)-average_scie_SG),\n         average_read_diff = abs(mean(read)-average_read_SG)) %&gt;%\n  select(school_ID, average_math_diff, average_science_diff, average_read_diff) %&gt;%\n  unique() \n\nOn the code above we are going to calculate the average of performance of student for each school across Singapore against Singapore overall average.\nFollowed by calculating the error or the differences between each school average and the average in Singapore.\n\n\nShow the code\np1 &lt;- ggplot(data = stu_qqq_sch,\n       aes(y = average_math_diff)) +\n  geom_boxplot(width = 0.1) +\n  stat_boxplot(geom = \"errorbar\", width = 0.05) +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",         \n               colour = \"red\", \n               size = 1) +\n  scale_y_continuous(NULL, limits = c(0,220)) +\n  scale_x_continuous(\"math avg grade diff\", breaks = NULL) +\n  theme_minimal()\n\np2 &lt;- ggplot(data = stu_qqq_sch,\n       aes(y = average_science_diff)) +\n  geom_boxplot(width = 0.1) +\n  stat_boxplot(geom = \"errorbar\", width = 0.05) +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y =\"mean\",         \n               colour =\"red\", \n               size=1) +\n  scale_y_continuous(NULL, limits = c(0,220)) +\n  scale_x_continuous(\"science avg grade diff\", breaks = NULL) +\n  theme_minimal()\n\np3 &lt;- ggplot(data = stu_qqq_sch,\n       aes(y = average_read_diff)) +\n  geom_boxplot(width = 0.1) +\n  stat_boxplot(geom = \"errorbar\", width = 0.05) +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y =\"mean\",         \n               colour =\"red\", \n               size=1) +\n  scale_y_continuous(NULL, limits = c(0,220)) +\n  scale_x_continuous(\"reading avg grade diff\", breaks = NULL) +\n  theme_minimal()\n\np1|p2|p3\n\n\n\n\n\nThe plots above show that the differences between all study subject were similar. However, the differences between a school and the Singapore average are ranged from 0 to 220. And, the average differences is around 40. This mean that not every single school in Singapore are having the same performance with each other.\nOn the other hand, the q3 of the box plot lay around 70 point scores. This mean that almost 75% of school in Singapore are located between 0-70 point difference to national average. On the other side, there are some school that are having almost 150 point difference either higher or lower against the national average.\n\n\n4. Social Economic\nThe last factor that are going to be explored is social economic. The social economic range from -3.55 to 3.28. there are 47 row that has no social economic score.\n\nsummary(stu_qqq$socio_economic)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n-3.5488 -0.2327  0.4817  0.2904  0.9036  3.2780      47 \n\n\nThe data contain na value. Therefore, we are going to remove it from our analysis using drop_na().\n\nstu_qqq_socec &lt;- stu_qqq %&gt;%\n  select(math, science, read, socio_economic) %&gt;%\n  drop_na()\n\nThe code below plot the distribution of student social economic standing in Singapore.\n\n\nShow the code\nggplot(data = stu_qqq_socec,\n       aes(y = socio_economic)) +\n  geom_violin(aes(x = 0))+\n  geom_boxplot()+\n  stat_summary(geom = 'point',\n               fun = 'mean',\n               aes(x = 0),\n               color = 'red') +\n  scale_y_continuous(NULL) +\n  scale_x_continuous('Social Economic Standing', breaks = NULL) +\n  theme_minimal()\n\n\n\n\n\n\n\nShow the code\ncor1 &lt;- round(cor(stu_qqq_socec$math, stu_qqq_socec$socio_economic),2)\ncor2 &lt;- round(cor(stu_qqq_socec$science, stu_qqq_socec$socio_economic),2)\ncor3 &lt;- round(cor(stu_qqq_socec$read, stu_qqq_socec$socio_economic),2)\n\np1 &lt;- ggplot(data = stu_qqq_socec,\n             aes(y = math, x = socio_economic)) +\n        geom_point(size = 0.1)+\n        geom_smooth(method = lm) + \n        annotate(\"text\", x = 2.5, y = 600, label=paste0(\"r = \", cor1), color = 'blue') +\n        theme_minimal()\n\np2 &lt;- ggplot(data = stu_qqq_socec,\n             aes(y = science, x = socio_economic)) +\n        geom_point(size = 0.1)+\n        geom_smooth(method = lm) +\n        annotate(\"text\", x = 2.5, y = 600, label=paste0(\"r = \", cor2), color = 'blue') + \n        theme_minimal()\n\np3 &lt;- ggplot(data = stu_qqq_socec,\n             aes(y = read, x = socio_economic)) +\n        geom_point(size = 0.1)+\n        geom_smooth(method = lm) + \n        annotate(\"text\", x = 2.5, y = 600, label=paste0(\"r = \", cor3), color = 'blue') +\n        theme_minimal()\n\np1/p2/p3\n\n\n\n\n\nFrom all the 3 plot, can be seen that the scatter are quite distributed across all levels. However, all the correlation between social economic and all the performances are around 0.44 which show weak to medium positive correlation between the social economic and student’s performances. Can be said that the higher social economic standing of a student, the higher their score will be."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#conclusion",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#conclusion",
    "title": "Take-Home Exercise 1",
    "section": "Conclusion",
    "text": "Conclusion\n\nStudent performances between subjects are similar\nGender does not affect student performances\nNot all school in Singapore are equal\nSocial economic standing play a small part toward students’ performances"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this in-class exercise, two R packages will be used. They are:\n\nTidyverse :\nHaven :\n\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#loading-r-packages",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this in-class exercise, two R packages will be used. They are:\n\nTidyverse :\nHaven :\n\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-pisa-data",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html#importing-pisa-data",
    "title": "In-class Exercise 1: Now You See It!",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R\n\nstu_qqq &lt;- read_sas('data/cy08msp_stu_qqq.sas7bdat')\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG, 'data/stu_qqq_SG.rds')\n\n\nstu_qqq_SG &lt;- read_rds('data/stu_qqq_SG.rds')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "",
    "text": "in this hands on exercise, we are going to explore a new statistical graphic method for visualising distribution: ridgeline and raincloud plot by ggplot2 extenstions"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#overview",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "",
    "text": "in this hands on exercise, we are going to explore a new statistical graphic method for visualising distribution: ridgeline and raincloud plot by ggplot2 extenstions"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#getting-started",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Getting started",
    "text": "Getting started\n\nIntall and Load packages\n\nggridges: ggplot2 extension to plot ridgeline\nggdist: to visualise distribution and uncertainty\n\n\npacman::p_load(ggdist, ggridges, ggthemes, colorspace, tidyverse)\n\n\n\nImporting data\n\nexam &lt;- read_csv('data/Exam_data.csv')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#visualising-distribution-with-ridgeline",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#visualising-distribution-with-ridgeline",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Visualising distribution with ridgeline",
    "text": "Visualising distribution with ridgeline\nridgeline plot also commonly called by joyplot. it is to visualise numeric value distribution of several groups.\nit is usually used to plot distribution across medium to high number of group (more than 5)\n\nggridges method\nthere are 2 geom plot :\n\ngeom_ridgeline(): to draw the height values directly to the ridgeline\ngeom_density_ridges(): i take estimates to draw the distribution plot\n\nhere are plot using geom density ridges:\n\nggplot(data = exam,\n       aes(x = ENGLISH,\n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0,0)\n  ) +\n  scale_y_discrete(NULL, expand = expansion(add = c(0.2,2.6))) +\n  theme_ridges()\n\n\n\n\n\n\nvarying fill color among x axis\nusing the geom_ridgeline_gradient() or geom_density_ridges_gradient()\n\nggplot(data = exam,\n       aes(x = ENGLISH,\n           y = CLASS,\n           fill = stat(x))) + \n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01\n  ) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") + \n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0,0)\n  ) +\n  scale_y_discrete(NULL, expand = expansion(add = c(0.2,2.6))) +\n  theme_ridges()\n\n\n\n\n\n\nmapping probability to the color\nusing stat_density_ridges()\n\nggplot(data = exam,\n       aes(x = ENGLISH,\n           y = CLASS,\n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\",\n                      calc_ecdf = TRUE) + \n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction =  -1) +\n  theme_ridges()\n\n\n\n\n\nadding quantile lines\nusing geom_density_ridges_gradient() and stat(quantile)\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\nwe can also color it manually"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#visualising-distribution-with-raincloud",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#visualising-distribution-with-raincloud",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "Visualising distribution with raincloud",
    "text": "Visualising distribution with raincloud\n\nhalf eye graph\nplot containing a half density and a slab interval\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\nadding the box plot\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\nadding the dot plots\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\nfinishing touch\nusing coordflip to flip the rain plot and adding theme\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html",
    "title": "Hands-on_Exercise 4b: Visual Statistical Analysis",
    "section": "",
    "text": "in this hands on exercise, we we explore:\n\nggstatsplot package to create visual graphics with rich statistical information\nperformance package to visualise model diagnostics\nparameteres package to visualise model parameters"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#overview",
    "title": "Hands-on_Exercise 4b: Visual Statistical Analysis",
    "section": "",
    "text": "in this hands on exercise, we we explore:\n\nggstatsplot package to create visual graphics with rich statistical information\nperformance package to visualise model diagnostics\nparameteres package to visualise model parameters"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#visual-statistical-analysis-with-ggstatsplot",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#visual-statistical-analysis-with-ggstatsplot",
    "title": "Hands-on_Exercise 4b: Visual Statistical Analysis",
    "section": "Visual statistical analysis with ggstatsplot",
    "text": "Visual statistical analysis with ggstatsplot\nggstats plot is ggplot2 extension to create a more detail information rich plot graphic\nit is an alternative statistical inference method\nit is a best practice for statistical reporting"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#getting-started",
    "title": "Hands-on_Exercise 4b: Visual Statistical Analysis",
    "section": "Getting started",
    "text": "Getting started\n\nLoading and installing package\n\npacman::p_load(ggstatsplot, tidyverse)\n\n\n\nimporting data\n\nexam &lt;- read_csv('data/Exam_data.csv')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#visualising-ggstatsplot",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#visualising-ggstatsplot",
    "title": "Hands-on_Exercise 4b: Visual Statistical Analysis",
    "section": "visualising ggstatsplot",
    "text": "visualising ggstatsplot\n\nBayes factor\n\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\nThat’s because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.\nWhen we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10. It can be defined mathematically as\n\n\n\nThe Schwarz criterion is one of the easiest ways to calculate rough approximation of the Bayes Factor.\n\n\n\ngghistostats: one-sample test\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\n\n\nggbetweenstats: two-sample test\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\nggbetweenstats: one way ANOVA\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\nError in validObject(.Object) : \n  invalid class \"ddenseModelMatrix\" object: superclass \"xMatrix\" not defined in the environment of the object's class\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats: Correlation significance test\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\n\n\n\nggbarstats: association significance test\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#getting-started-2",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#getting-started-2",
    "title": "Hands-on_Exercise 4b: Visual Statistical Analysis",
    "section": "Getting started 2",
    "text": "Getting started 2\n\nInstalling and loading the libraries\n\npacman::p_load(readxl, performance, parameters, see)\n\n\n\nImporting Excel file\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#performance-package",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#performance-package",
    "title": "Hands-on_Exercise 4b: Visual Statistical Analysis",
    "section": "Performance package",
    "text": "Performance package\n\nMultiple Regression Model using lm()\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\nmulticolinearity check\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\n\nchecking normality assumption\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n &lt;- check_normality(model1)\n\n\nplot(check_n)\n\n\n\n\n\n\n\n\n\n\ncheck homogeneity of variance of the model\n\ncheck_h &lt;- check_heteroscedasticity(model1)\n\n\nplot(check_h)\n\n\n\n\n\n\n\n\n\n\ncomplete check\n\ncheck_model(model1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#see-method",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#see-method",
    "title": "Hands-on_Exercise 4b: Visual Statistical Analysis",
    "section": "See method",
    "text": "See method\n\nplot(parameters(model1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#ggcoefstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#ggcoefstats-methods",
    "title": "Hands-on_Exercise 4b: Visual Statistical Analysis",
    "section": "ggcoefstats() methods",
    "text": "ggcoefstats() methods\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html",
    "title": "Hands-on_Exercise 4c: Visualising Uncertainty",
    "section": "",
    "text": "Plotting visual uncertainty using :\n\nerror bars: ggplot2\ninteractive error bars: ggplot2, plotly, and DT\nadvanced: ggdist\nhypothetical outcole plots: ungeviz"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#overview",
    "title": "Hands-on_Exercise 4c: Visualising Uncertainty",
    "section": "",
    "text": "Plotting visual uncertainty using :\n\nerror bars: ggplot2\ninteractive error bars: ggplot2, plotly, and DT\nadvanced: ggdist\nhypothetical outcole plots: ungeviz"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#getting-started",
    "title": "Hands-on_Exercise 4c: Visualising Uncertainty",
    "section": "Getting Started",
    "text": "Getting Started\n\nIntalling and laoding the packages\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)\n\n\n\nData Import\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#visualising-uncertainty-of-point-estimate-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#visualising-uncertainty-of-point-estimate-ggplot2",
    "title": "Hands-on_Exercise 4c: Visualising Uncertainty",
    "section": "Visualising uncertainty of point estimate: ggplot2",
    "text": "Visualising uncertainty of point estimate: ggplot2\npoint estimate is a single number e.g mean, median.\nuncertainty is: standard error, confidence interval, credible interval\nwe are going to visualise using data of math exam score grouped by race\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\npreview of the stats\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\nerror bars\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by race\")\n\n\n\n\n\n\n\n\n\n\nconfidence interval\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\n\n\n\ninteractive error bars\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#visualising-uncertainty-ggdist-package",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#visualising-uncertainty-ggdist-package",
    "title": "Hands-on_Exercise 4c: Visualising Uncertainty",
    "section": "Visualising uncertainty: ggdist package",
    "text": "Visualising uncertainty: ggdist package\n\nggdist is an R package that provides a flexible set of ggplot2 geoms and stats designed especially for visualising distributions and uncertainty.\nIt is designed for both frequentist and Bayesian uncertainty visualization, taking the view that uncertainty visualization can be unified through the perspective of distribution visualization:\n\nfor frequentist models, one visualises confidence distributions or bootstrap distributions (see vignette(“freq-uncertainty-vis”));\nfor Bayesian models, one visualises probability distributions (see the tidybayes package, which builds on top of ggdist).\n\n\n\n\nuncertainty of point estimates using ggdist method 1\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\ntrying the width, point, and interval attribute\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(\n    .width = 0.95,\n    point_interval = 'median_qi') +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nuncertainty of point estimates using ggdist method 2\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(.width = c(0.95,0.99)) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nuncertainty of point estimates using ggdist method 3\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#hypothetical-outcome-plots-hops",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#hypothetical-outcome-plots-hops",
    "title": "Hands-on_Exercise 4c: Visualising Uncertainty",
    "section": "Hypothetical Outcome Plots (HOPs)",
    "text": "Hypothetical Outcome Plots (HOPs)\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html",
    "title": "Hands-on_Exercise 4d: Funnel Plots for Fair Comparison",
    "section": "",
    "text": "we are going to designed data visualisation to performed unbiased comparison utilising:\n\nfunnelPlotR: plotting funnel plot\nggplot2\nplotly: for interactivity"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#overview",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#overview",
    "title": "Hands-on_Exercise 4d: Funnel Plots for Fair Comparison",
    "section": "",
    "text": "we are going to designed data visualisation to performed unbiased comparison utilising:\n\nfunnelPlotR: plotting funnel plot\nggplot2\nplotly: for interactivity"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#installing-and-importing-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#installing-and-importing-r-packages",
    "title": "Hands-on_Exercise 4d: Funnel Plots for Fair Comparison",
    "section": "Installing and importing r packages",
    "text": "Installing and importing r packages\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#importing-data",
    "title": "Hands-on_Exercise 4d: Funnel Plots for Fair Comparison",
    "section": "Importing data",
    "text": "Importing data\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#funnelplotr",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#funnelplotr",
    "title": "Hands-on_Exercise 4d: Funnel Plots for Fair Comparison",
    "section": "FunnelPlotR",
    "text": "FunnelPlotR\nFunnelPlotR package uses ggplot to generate funnel plots. It requires a numerator (events of interest), denominator (population to be considered) and group. The key arguments selected for customisation are:\n\nlimit: plot limits (95 or 99).\nlabel_outliers: to label outliers (true or false).\nPoisson_limits: to add Poisson limits to the plot.\nOD_adjust: to add overdispersed limits to the plot.\nxrange and yrange: to specify the range to display for axes, acts like a zoom function.\nOther aesthetic components such as graph title, axis labels etc.\n\n\nthe basic plot\n\nfunnel_plot(\n  numerator = covid19$Positive,\n  denominator = covid19$Death,\n  group = covid19$`Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nmakeover 1\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nMakeover 2\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#ggplot-method",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#ggplot-method",
    "title": "Hands-on_Exercise 4d: Funnel Plots for Fair Comparison",
    "section": "ggplot method",
    "text": "ggplot method\n\ncomputing the derived fields\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\ncalculating lower and upper limit for 0.95 and 0.99 CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\nplotting\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\nadding interactivity\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  }
]