---
title: "Hands-on_Exercise 4b: Visual Statistical Analysis"
date: "28 January 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
editor: visual
---

## Overview

in this hands on exercise, we we explore:

-   ggstatsplot package to create visual graphics with rich statistical information

-   performance package to visualise model diagnostics

-   parameteres package to visualise model parameters

## Visual statistical analysis with ggstatsplot

ggstats plot is ggplot2 extension to create a more detail information rich plot graphic

it is an alternative statistical inference method

it is a best practice for statistical reporting

## Getting started

### Loading and installing package

```{r}
pacman::p_load(ggstatsplot, tidyverse)
```

### importing data

```{r}
exam <- read_csv('data/Exam_data.csv')
```

## visualising ggstatsplot

### Bayes factor

-   A Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.

-   That's because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.

-   When we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10. It can be defined mathematically as

<!-- -->

-   The [**Schwarz criterion**](https://www.statisticshowto.com/bayesian-information-criterion/) is one of the easiest ways to calculate rough approximation of the Bayes Factor.

### gghistostats: one-sample test

```{r}
set.seed(1234)

gghistostats(
  data = exam,
  x = ENGLISH,
  type = "bayes",
  test.value = 60,
  xlab = "English scores"
)
```

### ggbetweenstats: two-sample test

```{r}
ggbetweenstats(
  data = exam,
  x = GENDER, 
  y = MATHS,
  type = "np",
  messages = FALSE
)
```

### ggbetweenstats: one way ANOVA

```{r}
ggbetweenstats(
  data = exam,
  x = RACE, 
  y = ENGLISH,
  type = "p",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)
```

### ggscatterstats: Correlation significance test

```{r}
ggscatterstats(
  data = exam,
  x = MATHS,
  y = ENGLISH,
  marginal = FALSE,
  )
```

### ggbarstats: association significance test

```{r}
exam1 <- exam %>% 
  mutate(MATHS_bins = 
           cut(MATHS, 
               breaks = c(0,60,75,85,100))
)
```

```{r}
ggbarstats(exam1, 
           x = MATHS_bins, 
           y = GENDER)
```

## Getting started 2

### Installing and loading the libraries

```{r}
pacman::p_load(readxl, performance, parameters, see)
```

### Importing Excel file

```{r}
car_resale <- read_xls("data/ToyotaCorolla.xls", 
                       "data")
car_resale
```

## Performance package

### Multiple Regression Model using lm()

```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + 
              Weight + Guarantee_Period, data = car_resale)
model
```

### multicolinearity check

```{r}
check_collinearity(model)
```

### checking normality assumption

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + 
              Weight + Guarantee_Period, data = car_resale)
```

```{r}
check_n <- check_normality(model1)
```

```{r}
plot(check_n)
```

### check homogeneity of variance of the model

```{r}
check_h <- check_heteroscedasticity(model1)
```

```{r}
plot(check_h)
```

### complete check

```{r}
check_model(model1)
```

## See method

```{r}
plot(parameters(model1))
```

## ggcoefstats() methods

```{r}
ggcoefstats(model1, 
            output = "plot")
```
